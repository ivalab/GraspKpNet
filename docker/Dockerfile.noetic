FROM nvidia/cuda:11.7.0-devel-ubuntu20.04

# take the core ros image on top of the cuda focal image
# https://github.com/osrf/docker_images/blob/master/ros/noetic/ubuntu/focal/ros-core/Dockerfile

# noninteractive to avoid tzdata prompt
ENV DEBIAN_FRONTEND noninteractive
ENV ROS_DISTRO noetic
RUN echo "deb http://packages.ros.org/ros/ubuntu focal main" > /etc/apt/sources.list.d/ros1-latest.list
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    ros-noetic-ros-core=1.5.0-1*

# We need cuda to build DCNv2

RUN apt-get update && \
    apt-get install -y \
    apt-utils \
    build-essential \
    git \
    python3-dev \
    python3-pip \
    python-is-python3 \
    ninja-build \
    libgl1-mesa-glx

RUN pip install --upgrade pip wheel cython && \
    pip install torch torchvision --extra-index-url https://download.pytorch.org/whl/cu117

# install cocoapi
WORKDIR /opt
RUN git clone https://github.com/cocodataset/cocoapi.git && \
    cd cocoapi &&\
    git checkout 8c9bcc3 && \
    cd PythonAPI && \
    make && \
    python setup.py install

WORKDIR /opt
# fork of https://github.com/lbin/DCNv2.git with ability to compile with cuda
# without an nvidia gpu attached
RUN git clone https://github.com/acmiyaguchi/DCNv2.git && \
    cd DCNv2 && \
    git checkout pytorch_1.11 && \
    # https://github.com/facebookresearch/pytorch3d/issues/318
    FORCE_CUDA=1 \
    # https://github.com/pytorch/extension-cpp/issues/71
    TORCH_CUDA_ARCH_LIST="3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6+PTX" \
    python setup.py build develop

# install nms
WORKDIR /app
ADD vendor/ vendor/
RUN cd vendor/nms && \
    python setup.py build install

ADD requirements.txt /app/requirements.txt
RUN pip install -r requirements.txt

# add the source code to the image
WORKDIR /app
ADD . /app

RUN pip install -e .

# setup entrypoint
COPY ./docker/bin/ros_entrypoint.sh /
ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]
